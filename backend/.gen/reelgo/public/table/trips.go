//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Trips = newTripsTable("public", "trips", "")

type tripsTable struct {
	postgres.Table

	// Columns
	UID      postgres.ColumnInteger
	Tid      postgres.ColumnInteger
	TripName postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type TripsTable struct {
	tripsTable

	EXCLUDED tripsTable
}

// AS creates new TripsTable with assigned alias
func (a TripsTable) AS(alias string) *TripsTable {
	return newTripsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TripsTable with assigned schema name
func (a TripsTable) FromSchema(schemaName string) *TripsTable {
	return newTripsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TripsTable with assigned table prefix
func (a TripsTable) WithPrefix(prefix string) *TripsTable {
	return newTripsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TripsTable with assigned table suffix
func (a TripsTable) WithSuffix(suffix string) *TripsTable {
	return newTripsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTripsTable(schemaName, tableName, alias string) *TripsTable {
	return &TripsTable{
		tripsTable: newTripsTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newTripsTableImpl("", "excluded", ""),
	}
}

func newTripsTableImpl(schemaName, tableName, alias string) tripsTable {
	var (
		UIDColumn      = postgres.IntegerColumn("uid")
		TidColumn      = postgres.IntegerColumn("tid")
		TripNameColumn = postgres.StringColumn("trip_name")
		allColumns     = postgres.ColumnList{UIDColumn, TidColumn, TripNameColumn}
		mutableColumns = postgres.ColumnList{TripNameColumn}
	)

	return tripsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UID:      UIDColumn,
		Tid:      TidColumn,
		TripName: TripNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
